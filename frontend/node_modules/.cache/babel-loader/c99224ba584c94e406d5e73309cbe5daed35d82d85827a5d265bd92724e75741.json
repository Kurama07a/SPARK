{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Personal Projects\\\\MERN\\\\New folder\\\\frontend\\\\src\\\\components\\\\attendance\\\\calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../styles/attendanceviewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const daysInMonth = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  };\n  const currentDate = new Date();\n  const currentMonth = currentDate.getMonth();\n  const currentYear = currentDate.getFullYear();\n  const daysCount = daysInMonth(currentMonth + 1, currentYear); // Calculate days in current month\n\n  const [selectedMonth, setSelectedMonth] = useState(currentMonth);\n  const [selectedYear, setSelectedYear] = useState(currentYear);\n  const changeMonth = change => {\n    let newMonth = selectedMonth + change;\n    let newYear = selectedYear;\n    if (newMonth > 11) {\n      newMonth = 0;\n      newYear++;\n    } else if (newMonth < 0) {\n      newMonth = 11;\n      newYear--;\n    }\n    setSelectedMonth(newMonth);\n    setSelectedYear(newYear);\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(NavButton, {\n        onClick: () => changeMonth(-1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [months[selectedMonth], \" \", selectedYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n        onClick: () => changeMonth(1),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DaysGrid, {\n      children: Array.from({\n        length: daysCount\n      }, (_, index) => {\n        const day = index + 1;\n        const isSelectedMonth = selectedMonth === currentMonth;\n        const isSelectedYear = selectedYear === currentYear;\n        const isCurrentDay = isSelectedMonth && isSelectedYear && day === currentDate.getDate();\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: isCurrentDay ? /*#__PURE__*/_jsxDEV(CurrentDay, {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Day, {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"sFv6YjbQwpTEA3Bf/vLZXPM69Lk=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calendar","_s","months","daysInMonth","month","year","Date","getDate","currentDate","currentMonth","getMonth","currentYear","getFullYear","daysCount","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","changeMonth","change","newMonth","newYear","CalendarContainer","children","Header","NavButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","DaysGrid","Array","from","length","_","index","day","isSelectedMonth","isSelectedYear","isCurrentDay","Fragment","CurrentDay","Day","_c","$RefreshReg$"],"sources":["D:/Code/Personal Projects/MERN/New folder/frontend/src/components/attendance/calendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../styles/attendanceviewer.css'\r\nconst Calendar = () => {\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n  const daysInMonth = (month, year) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const currentMonth = currentDate.getMonth();\r\n  const currentYear = currentDate.getFullYear();\r\n  const daysCount = daysInMonth(currentMonth + 1, currentYear); // Calculate days in current month\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState(currentMonth);\r\n  const [selectedYear, setSelectedYear] = useState(currentYear);\r\n\r\n  const changeMonth = (change) => {\r\n    let newMonth = selectedMonth + change;\r\n    let newYear = selectedYear;\r\n\r\n    if (newMonth > 11) {\r\n      newMonth = 0;\r\n      newYear++;\r\n    } else if (newMonth < 0) {\r\n      newMonth = 11;\r\n      newYear--;\r\n    }\r\n\r\n    setSelectedMonth(newMonth);\r\n    setSelectedYear(newYear);\r\n  };\r\n\r\n  return (\r\n    <CalendarContainer>\r\n      <Header>\r\n        <NavButton onClick={() => changeMonth(-1)}>&#60;</NavButton>\r\n        <h2>{months[selectedMonth]} {selectedYear}</h2>\r\n        <NavButton onClick={() => changeMonth(1)}>&#62;</NavButton>\r\n      </Header>\r\n      <DaysGrid>\r\n        {Array.from({ length: daysCount }, (_, index) => {\r\n          const day = index + 1;\r\n          const isSelectedMonth = selectedMonth === currentMonth;\r\n          const isSelectedYear = selectedYear === currentYear;\r\n          const isCurrentDay = isSelectedMonth && isSelectedYear && day === currentDate.getDate();\r\n\r\n          return (\r\n            <React.Fragment key={index}>\r\n              {isCurrentDay ? (\r\n                <CurrentDay>{day}</CurrentDay>\r\n              ) : (\r\n                <Day>{day}</Day>\r\n              )}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </DaysGrid>\r\n    </CalendarContainer>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}