{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Personal Projects\\\\MERN\\\\New folder\\\\frontend\\\\src\\\\components\\\\attendance\\\\calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-family: Arial, sans-serif;\n  max-width: 400px;\n  margin: 0 auto;\n  background-color: #ccc;\n  color: azure;\n  padding: 20px;\n  border-radius: 8px;\n`;\n_c = CalendarContainer;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n_c2 = Header;\nconst NavButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.5em;\n  cursor: pointer;\n  color: azure;\n`;\n_c3 = NavButton;\nconst DaysGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 5px;\n`;\n_c4 = DaysGrid;\nconst Day = styled.div`\n  text-align: center;\n  padding: 10px;\n  border-radius: 5px;\n`;\n_c5 = Day;\nconst CurrentDay = styled(Day)`\n  background-color: blue;\n  color: white;\n`;\n_c6 = CurrentDay;\nconst Calendar = () => {\n  _s();\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const daysInMonth = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  };\n  const currentDate = new Date();\n  const currentMonth = currentDate.getMonth();\n  const currentYear = currentDate.getFullYear();\n  const daysCount = daysInMonth(currentMonth + 1, currentYear); // Calculate days in current month\n\n  const [selectedMonth, setSelectedMonth] = useState(currentMonth);\n  const [selectedYear, setSelectedYear] = useState(currentYear);\n  const changeMonth = change => {\n    let newMonth = selectedMonth + change;\n    let newYear = selectedYear;\n    if (newMonth > 11) {\n      newMonth = 0;\n      newYear++;\n    } else if (newMonth < 0) {\n      newMonth = 11;\n      newYear--;\n    }\n    setSelectedMonth(newMonth);\n    setSelectedYear(newYear);\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(NavButton, {\n        onClick: () => changeMonth(-1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [months[selectedMonth], \" \", selectedYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n        onClick: () => changeMonth(1),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DaysGrid, {\n      children: Array.from({\n        length: daysCount\n      }, (_, index) => {\n        const day = index + 1;\n        const isSelectedMonth = selectedMonth === currentMonth;\n        const isSelectedYear = selectedYear === currentYear;\n        const isCurrentDay = isSelectedMonth && isSelectedYear && day === currentDate.getDate();\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: isCurrentDay ? /*#__PURE__*/_jsxDEV(CurrentDay, {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Day, {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"sFv6YjbQwpTEA3Bf/vLZXPM69Lk=\");\n_c7 = Calendar;\nexport default Calendar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"NavButton\");\n$RefreshReg$(_c4, \"DaysGrid\");\n$RefreshReg$(_c5, \"Day\");\n$RefreshReg$(_c6, \"CurrentDay\");\n$RefreshReg$(_c7, \"Calendar\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","CalendarContainer","div","_c","Header","_c2","NavButton","button","_c3","DaysGrid","_c4","Day","_c5","CurrentDay","_c6","Calendar","_s","months","daysInMonth","month","year","Date","getDate","currentDate","currentMonth","getMonth","currentYear","getFullYear","daysCount","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","changeMonth","change","newMonth","newYear","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","index","day","isSelectedMonth","isSelectedYear","isCurrentDay","Fragment","_c7","$RefreshReg$"],"sources":["D:/Code/Personal Projects/MERN/New folder/frontend/src/components/attendance/calendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CalendarContainer = styled.div`\r\n  font-family: Arial, sans-serif;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  background-color: #ccc;\r\n  color: azure;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst NavButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5em;\r\n  cursor: pointer;\r\n  color: azure;\r\n`;\r\n\r\nconst DaysGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 5px;\r\n`;\r\n\r\nconst Day = styled.div`\r\n  text-align: center;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst CurrentDay = styled(Day)`\r\n  background-color: blue;\r\n  color: white;\r\n`;\r\n\r\nconst Calendar = () => {\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n  const daysInMonth = (month, year) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const currentMonth = currentDate.getMonth();\r\n  const currentYear = currentDate.getFullYear();\r\n  const daysCount = daysInMonth(currentMonth + 1, currentYear); // Calculate days in current month\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState(currentMonth);\r\n  const [selectedYear, setSelectedYear] = useState(currentYear);\r\n\r\n  const changeMonth = (change) => {\r\n    let newMonth = selectedMonth + change;\r\n    let newYear = selectedYear;\r\n\r\n    if (newMonth > 11) {\r\n      newMonth = 0;\r\n      newYear++;\r\n    } else if (newMonth < 0) {\r\n      newMonth = 11;\r\n      newYear--;\r\n    }\r\n\r\n    setSelectedMonth(newMonth);\r\n    setSelectedYear(newYear);\r\n  };\r\n\r\n  return (\r\n    <CalendarContainer>\r\n      <Header>\r\n        <NavButton onClick={() => changeMonth(-1)}>&#60;</NavButton>\r\n        <h2>{months[selectedMonth]} {selectedYear}</h2>\r\n        <NavButton onClick={() => changeMonth(1)}>&#62;</NavButton>\r\n      </Header>\r\n      <DaysGrid>\r\n        {Array.from({ length: daysCount }, (_, index) => {\r\n          const day = index + 1;\r\n          const isSelectedMonth = selectedMonth === currentMonth;\r\n          const isSelectedYear = selectedYear === currentYear;\r\n          const isCurrentDay = isSelectedMonth && isSelectedYear && day === currentDate.getDate();\r\n\r\n          return (\r\n            <React.Fragment key={index}>\r\n              {isCurrentDay ? (\r\n                <CurrentDay>{day}</CurrentDay>\r\n              ) : (\r\n                <Day>{day}</Day>\r\n              )}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </DaysGrid>\r\n    </CalendarContainer>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}